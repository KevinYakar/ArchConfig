#!/bin/bash

cd ~/ArchConfig
[[ "" == $( pacman -Qqs | grep '^go-rainbow-git$' ) ]] && echo "You don't have rainbow installed. Go install it!" && exit 

printArray () {
    arr=("$@")
    (( ${#arr[@]} == 0 )) && echo "none" && return
    for item in ${arr[@]};
    do
        echo $item
    done
}

# show differences from last commit
differences=($(git diff b17b 6d4a | grep -E '^diff|\-\-\- \/dev\/null|\+\+\+ \/dev\/null' | sed -e "s/^diff.* b\///" -e "s/^\+.*/deleted/g" -e "s/^\-.*/added/g"))
# differences=($(git diff $(git log | grep commit | head -n 2 | tail -n 1 | sed -e "s/commit //g") | grep -E '^diff|\-\-\- \/dev\/null|\+\+\+ \/dev\/null' | sed -e "s/^diff.* b\///" -e "s/^\+.*/deleted/g" -e "s/^\-.*/added/g"))

add=()
delete=()
modify=()

idx=0
while (( $idx < ${#differences[@]} ));
do
    current=${differences[$idx]}
    next=${differences[(( $idx + 1 ))]}

    case $next in
        added)
            add+=($current)
            ;;

        deleted)
            delete+=($current)
            ;;

        *)
            [ -z "$next" ] && [ $current != "added" ] && [ $current != "deleted" ] && modify+=($current)
            [ -n "$next" ] && [ $next != "added" ] && [ $next != "deleted" ] && [ $current != "added" ] && [ $current != "deleted" ] && modify+=($current)
            ;;
    esac
    idx=$(( idx + 1 ))
done

echo -e "=====Added=====" | rainbow
printArray "${add[@]}"
echo

echo -e "=====Deleted=====" | rainbow
printArray "${delete[@]}"
echo

echo -e "=====Modified=====" | rainbow
printArray "${modify[@]}"
echo

echo -n 'Apply changes? [Y/n]: '
read response;

case $response in
    y|Y|'') echo -n '';;
    *) exit;;
esac

# create dirs
dirNames=$(printArray "${add[@]}" | awk -F '/' '{printf "'$HOME'/"; for(i=1;i<=NF-1;i++) printf $i"/"; print""}' | uniq)
mkdir -pv $dirNames

# copy new files over
for fileName in ${add[@]};
do
    # change this to remove the echo
    echo "sudo cp $fileName $HOME/$fileName"
    # sudo cp $fileName "$HOME/$fileName"
done

# printArray "${delete[@]}" | awk -F '/' '{for(i=1;i<=NF-1;i++) printf $i"/"; print""}' | uniq

# i dont think i would be using this since i have to check if the file exists
# printArray "${modify[@]}" | awk -F '/' '{for(i=1;i<=NF-1;i++) printf $i"/"; print"'$modify'"}' | uniq

# add shiz
# delete shiz
# only replace if it exists on local (for example, /home/kevin/update doesnt exist, so dont modify)

